name: 'Vigiti Code Analysis'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  vigiti-code-analysis:
    name: Vigiti Code Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Prepare output dir'
        run: |
          rm -rf out
          mkdir -p out

      - name: 'Run VIGITI Runner (Docker manual)'
        id: scan
        env:
          VIGITI_TOKEN: ${{ secrets.VIGITI_TOKEN }}
          VIGITI_API_URL: 'https://runner-278759733579.southamerica-east1.run.app'
        shell: bash
        run: |
          set -Eeuo pipefail

          # Habilita upload ao control-plane apenas se houver token
          UPLOAD_ENV=()
          if [[ -n "${VIGITI_TOKEN:-}" ]]; then
            echo "Token presente: upload ao control-plane habilitado."
            UPLOAD_ENV+=(-e VIGITI_TOKEN -e VIGITI_API_URL)
          else
            echo "Token ausente: rodando em modo offline (sem upload ao control-plane)."
          fi

          docker pull smmyth/vigiti-runner:v1.0.0-mvp

          # Executa o scan, captura stdout/stderr em log e também o exit code real
          set +e
          docker run --rm \
            "${UPLOAD_ENV[@]}" \
            -w /github/workspace \
            -v "$PWD":/github/workspace \
            smmyth/vigiti-runner:v1.0.0-mvp \
            scan \
              --path /github/workspace \
              --output /github/workspace/out \
              --summary \
              --ropa \
              --sarif /github/workspace/out/results.sarif \
              --debug \
          |& tee out/runner.log
          RC=${PIPESTATUS[0]}
          set -e

          echo "$RC" > out/runner-exitcode.txt
          echo "exit_code=$RC" >> "$GITHUB_OUTPUT"

          echo "Conteúdo de ./out após o scan:"
          ls -la out || true

          if [[ $RC -ne 0 ]]; then
            echo "::warning::VIGITI Runner retornou exit code $RC. Veja out/runner.log para detalhes."
          fi

      - name: 'Upload SARIF to GitHub Security (se existir)'
        if: ${{ hashFiles('out/results.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
            sarif_file: 'out/results.sarif'
            checkout_path: ${{ github.workspace }}
            wait-for-processing: true

      - name: 'Aviso: SARIF ausente'
        if: ${{ hashFiles('out/results.sarif') == '' }}
        run: echo "SARIF não encontrado. Veja out/runner.log para o erro detalhado."

      - name: 'Upload analysis artifacts (logs e outputs)'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vigiti-out
          path: out/**
          if-no-files-found: warn

      # Falha o job no fim se o scan não retornou 0
      - name: 'Fail if scan failed'
        if: ${{ steps.scan.outputs.exit_code != '0' }}
        run: |
          echo "Falha na análise (exit code ${{ steps.scan.outputs.exit_code }}). Consulte o artifact 'vigiti-out' (runner.log)."
          exit 1
