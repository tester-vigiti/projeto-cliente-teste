name: 'Vigiti Code Analysis'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  vigiti-code-analysis:
    name: Vigiti Code Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Prepare output dir'
        run: |
          rm -rf out
          mkdir -p out
          chmod 777 out   # garantir escrita pelo processo dentro do container

      - name: 'Run VIGITI Runner'
        id: scan
        env:
          VIGITI_TOKEN: ${{ secrets.VIGITI_TOKEN }}
          VIGITI_API_URL: 'https://runner-278759733579.southamerica-east1.run.app'
        shell: bash
        run: |
          set -Eeuo pipefail

          docker pull smmyth/vigiti-runner:v1.0.0-mvp

          # Executa o scan e espelha o log para arquivo
          set +e
          if [[ -n "${VIGITI_TOKEN:-}" ]]; then
            echo "Token presente: upload ao control-plane habilitado."
            docker run --rm \
              --user 0:0 \
              -w /github/workspace \
              -v "$PWD":/github/workspace \
              -e VIGITI_TOKEN \
              -e VIGITI_API_URL \
              smmyth/vigiti-runner:v1.0.0-mvp \
              scan \
                --path /github/workspace \
                --output /github/workspace/out \
                --summary \
                --ropa \
                --sarif /github/workspace/out/results.sarif \
                --debug \
            |& tee out/runner.log
          else
            echo "Token ausente: rodando em modo offline (sem upload ao control-plane)."
            docker run --rm \
              --user 0:0 \
              -w /github/workspace \
              -v "$PWD":/github/workspace \
              smmyth/vigiti-runner:v1.0.0-mvp \
              scan \
                --path /github/workspace \
                --output /github/workspace/out \
                --summary \
                --ropa \
                --sarif /github/workspace/out/results.sarif \
                --debug \
            |& tee out/runner.log
          fi
          RC=${PIPESTATUS[0]}
          set -e

          echo "$RC" > out/runner-exitcode.txt
          echo "exit_code=$RC" >> "$GITHUB_OUTPUT"

          echo "Conteúdo de ./out após o scan:"
          ls -la out || true

      # Se o SARIF não existir (porque o runner quebrou antes), gera um SARIF mínimo de contingência
      - name: 'Generate fallback SARIF if missing'
        if: ${{ hashFiles('out/results.sarif') == '' }}
        shell: bash
        run: |
          cat > out/results.sarif << 'EOF'
          {
            "version": "2.1.0",
            "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
            "runs": [{
              "tool": {
                "driver": {
                  "name": "VIGITI Code",
                  "informationUri": "https://example.com/vigiti-code",
                  "rules": []
                }
              },
              "invocations": [{
                "executionSuccessful": false,
                "workingDirectory": { "uri": "file:///github/workspace" },
                "properties": { "note": "Runner falhou antes de gerar o SARIF real. Verifique out/runner.log." }
              }],
              "results": []
            }]
          }
          EOF
          echo "SARIF de contingência gerado em out/results.sarif"

      - name: 'Upload SARIF to GitHub Security'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'out/results.sarif'
          checkout_path: ${{ github.workspace }}
          wait-for-processing: true

      - name: 'Upload analysis artifacts (logs e outputs)'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vigiti-out
          path: out/**
          if-no-files-found: warn

      # Falha o job no fim se o scan não terminou com sucesso
      - name: 'Fail if scan failed'
        if: ${{ steps.scan.outputs.exit_code != '0' }}
        run: |
          echo "Falha na análise (exit code ${{ steps.scan.outputs.exit_code }}). Consulte o artifact 'vigiti-out' (runner.log)."
          exit 1
